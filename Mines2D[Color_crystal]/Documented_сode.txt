def generate_crystals(self):
        world = self.generate_perlin_noises(COLL_X, COLL_Y)
        height = np.concatenate((np.full(COLL_Y // 2, 0.05), np.logspace(np.log10(0.05), np.log10(0.4), COLL_Y // 2)))
        crystal_map = [[None for _ in range(COLL_X)] for _ in range(COLL_Y)]
        for j in range(COLL_Y):
            for i in range(len(world[j])):
                if height[i] <= world[i][j] <= 0.5:
                    color_index = int((world[i][j] - height[i]) / (0.5 - height[i]) * (len(CRYSTAL_COLORS_BIG)+1))
                    color = CRYSTAL_COLORS_BIG[normalize_to_natural_range(color_index, 0, 4)]
                elif world[i][j] < height[i]:
                    color_index = int((world[i][j] / height[i]) * (len(CRYSTAL_COLORS_SMALL)+1))
                    color = CRYSTAL_COLORS_SMALL[normalize_to_natural_range(color_index, 0, 4)]
                crystal = Crystal(i, j, color)
                self.crystals.append(crystal)
                crystal_map[j][i] = crystal